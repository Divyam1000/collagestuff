exit equ 1
read equ 3
write equ 4
stdin equ 0
stdout equ 1


section .data
	prompt1 db "Enter two numbers : ",10
	prompt1len equ $-prompt1
	prompt2 db "sum of numbers : ",8
	prompt2len equ $-prompt2
	prompt3 db "subtraction of numbers : ",8
	prompt3len equ $-prompt3
	prompt4 db "Product of numbers : ",8
	prompt4len equ $-prompt4
	prompt5 db "Division of numbers : ",10
	prompt5len equ $-prompt5
	prompt6 db "quot : ",8
	prompt6len equ $-prompt6
	prompt7 db "rmd : ",8
	prompt7len equ $-prompt7
	newline db 10, 0
section .bss
	num1: resb 1
	num2: resb 1
	result1: resb 10
	result2: resb 10
	result3: resb 10
	result4: resb 10
	result5: resb 10
section .text
global _start

_start:


	mov eax, write
	mov ebx, stdout
	mov ecx, prompt1
	mov edx, prompt1len
	int 80h

	mov eax, read
	mov ebx, stdin
	mov ecx, num1
	mov edx, 5
	int 80h

	mov eax, read
	mov ebx, stdin
	mov ecx, num2
	mov edx, 5
	int 80h

; addition

	mov eax, write
	mov ebx, stdout
	mov ecx, prompt2
	mov edx, prompt2len
	int 80h	

	mov eax, [num1]
	sub eax, '0'
	mov ebx, [num2]
	sub ebx, '0'
	add eax, ebx
	add eax, '0'	
	mov [result1], eax
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, result1
	mov edx, 1
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, newline
	mov edx, 1
	int 80h

;subtraction

	mov eax, write
	mov ebx, stdout
	mov ecx, prompt3
	mov edx, prompt3len
	int 80h

	mov eax, [num1]
	sub eax, '0'
	mov ebx, [num2]
	sub ebx, '0'
	sub eax, ebx
	add eax, '0'	
	mov [result2], eax
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, result2
	mov edx, 1
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, newline
	mov edx, 1
	int 80h

;multiplication

	mov eax, write
	mov ebx, stdout
	mov ecx, prompt4
	mov edx, prompt4len
	int 80h

	mov al, [num1]
	sub al, '0'
	mov bl, [num2]
	sub bl, '0'
	mul bl
	add ax, '0'
	mov [result3] ,ax

	mov eax, write
	mov ebx, stdout
	mov ecx, result3
	mov edx, 10
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, newline
	mov edx, 1
	int 80h

;Division

	mov eax, write
	mov ebx, stdout
	mov ecx, prompt5
	mov edx, prompt5len
	int 80h

	mov al, [num1]
	sub al, '0'
	mov bl, [num2]
	sub bl, '0'
	div bl
	add ah, '0'
	add al, '0'
	mov [result4], al
	mov [result5], ah

	mov eax, write
	mov ebx, stdout
	mov ecx, prompt6
	mov edx, prompt6len
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, result4
	mov edx, 10
	int 80h
	
	mov eax, write
	mov ebx, stdout
	mov ecx, newline
	mov edx, 1
	int 80h
	
	mov eax, write
	mov ebx, stdout
	mov ecx, prompt7
	mov edx, prompt7len
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, result5
	mov edx, 10
	int 80h

	mov eax, write
	mov ebx, stdout
	mov ecx, newline
	mov edx, 1
	int 80h

	mov eax, exit
	mov ebx, 0
	int 80h
